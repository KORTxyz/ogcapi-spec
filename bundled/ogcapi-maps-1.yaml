openapi: 3.0.2
info:
  title: OGCAPI
  version: 0.0.1
  description: Implemations of OGC API
  contact:
    email: kortxyz@gmail.com
tags:
  - name: Maps
    description: Maps related routes
servers:
  - url: https://localhost
paths:
  /map:
    get:
      operationId: getMapDesc
      tags:
        - Maps
      summary: Fetch a maps description
      description: >-
        Retrieves the maps description for this collection including the 'links'
        to get a 'map', and the 'infoTemplate'.
      responses:
        '200':
          description: Metadata about the maps.
          content:
            application/json:
              schema:
                required:
                  - links
                type: object
                properties:
                  styles:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: night
                        links:
                          type: array
                          items:
                            $ref: '#/components/schemas/link'
                  defaultStyle:
                    type: string
                    example: topograhic
                  crs:
                    type: array
                    items:
                      type: string
                      example: http://www.opengis.net/def/crs/OGC/1.3/CRS84
                  crsSpatialExtents:
                    type: array
                    items:
                      type: object
                  minScaleDenominator:
                    type: integer
                    example: 10
                  maxScaleDenominator:
                    type: integer
                    example: 100000000
                  recomendedFormat:
                    type: string
                    example: image/jpg
                  maxWidth:
                    type: integer
                    example: 2048
                  maxHeigth:
                    type: integer
                    example: 2048
                  links:
                    type: array
                    items:
                      $ref: '#/components/schemas/link'
  /map/{styleId}:
    get:
      operationId: getMap
      tags:
        - Maps
      summary: get Map
      description: Fetches a rendered map of a style
      parameters:
        - $ref: '#/components/parameters/styleId'
        - $ref: '#/components/parameters/fImage'
        - $ref: '#/components/parameters/bbox'
        - $ref: '#/components/parameters/height'
        - $ref: '#/components/parameters/width'
      responses:
        '200':
          description: Map
          content:
            image/*:
              schema:
                type: string
                format: binary
components:
  schemas:
    link:
      required:
        - href
        - rel
        - type
      type: object
      properties:
        rel:
          type: string
        type:
          type: string
        title:
          type: string
        href:
          type: string
        templated:
          type: boolean
  parameters:
    styleId:
      name: styleId
      in: path
      description: |-
        Local identifier of a style. \
        A list of all available styles can be found
        under the /styles path.
      required: true
      schema:
        type: string
    fImage:
      name: f
      in: query
      description: >-
        The format of the response. If no value is provided, the standard http
        rules apply, i.e., the accept header is used to determine the format.


        Pre-defined values are jpeg, png or gif for image based tiles The
        response to other values is determined by the server.
      required: false
      style: form
      explode: false
      schema:
        type: string
        enum:
          - png
          - jpeg
          - html
      example: png
    bbox:
      name: bbox[]
      in: query
      description: >-
        Only features that have a geometry that intersects the bounding box are
        selected.

        The bounding box is provided as four or six numbers, depending on
        whether the

        coordinate reference system includes a vertical axis (height or depth):


        * Lower left corner, coordinate axis 1

        * Lower left corner, coordinate axis 2

        * Minimum value, coordinate axis 3 (optional)

        * Upper right corner, coordinate axis 1

        * Upper right corner, coordinate axis 2

        * Maximum value, coordinate axis 3 (optional)


        If the value consists of four numbers, the coordinate reference system
        is

        WGS 84 longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84)

        unless a different coordinate reference system is specified in the
        parameter `bbox-crs`.


        If the value consists of six numbers, the coordinate reference system is
        WGS 84 

        longitude/latitude/ellipsoidal height
        (http://www.opengis.net/def/crs/OGC/0/CRS84h)

        unless a different coordinate reference system is specified in the
        parameter `bbox-crs`.


        The query parameter `bbox-crs` is specified in OGC API - Features - Part
        2: Coordinate 

        Reference Systems by Reference.


        For WGS 84 longitude/latitude the values are in most cases the sequence
        of

        minimum longitude, minimum latitude, maximum longitude and maximum
        latitude.

        However, in cases where the box spans the antimeridian the first value

        (west-most box edge) is larger than the third value (east-most box
        edge).


        If the vertical axis is included, the third and the sixth number are the

        bottom and the top of the 3-dimensional bounding box.


        If a feature has multiple spatial geometry properties, it is the
        decision of the

        server whether only a single spatial geometry property is used to
        determine

        the extent or all relevant geometries.
      required: false
      schema:
        type: array
        minItems: 4
        maxItems: 6
        items:
          type: number
      style: form
      explode: false
    height:
      name: height
      in: query
      description: Height in pixels of map picture.
      required: false
      style: form
      explode: false
      schema:
        type: number
    width:
      name: width
      in: query
      description: Width in pixels of map picture.
      required: false
      style: form
      explode: false
      schema:
        type: number
